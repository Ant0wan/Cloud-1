---
- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    state: present

- name: Update package list
  package_facts:
    manager: auto

- name: Get lastest container runtimes
  apt:
    name: 'containerd.io'
    state: latest
    update_cache: yes

- name: Check Docker-CE versions
  set_fact:
    ce_version: "{{ ansible_facts.packages['docker-ce'] | default(none)  |  map(attribute='version')  |  list }}"

- name: Uninstall non-validated docker-ce
  apt:
    name: 'docker-ce'
    state: absent
    update_cache: yes
  when: docker_version not in ce_version

- name: Get last validated docker-ce {{ docker_version }}
  apt:
    name: "docker-ce={{ docker_version }}"
    state: present
    update_cache: yes
  when: docker_version not in ce_version

- name: Get pip3
  apt:
    name: 'python3-pip'
    state: latest
    update_cache: yes

- name: Install docker python package
  pip:
    name: docker

- name: Register variable of process containers
  community.docker.docker_host_info:
  register: cgroups_docker

- name: Copy Docker Deamon Configuration File
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0600'
    force: yes
  when: "cgroups_docker.host_info.CgroupDriver != 'systemd'"

- name: Systemd Reread Configuration
  systemd:
    daemon_reload: yes
  when: "cgroups_docker.host_info.CgroupDriver != 'systemd'"

- name: Systemd Enable and Start Docker
  systemd:
    name: docker
    enabled: yes
    masked: no
    state: restarted
  when: "cgroups_docker.host_info.CgroupDriver != 'systemd'"
